{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-Practice\\\\budget-calculator\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ExpenseList from \"./components/expenseList\";\nimport ExpenseForm from \"./components/expenseForm\";\nimport Alert from \"./components/alert\";\n\nconst {\n  uuid\n} = require(\"uuidv4\"); //localStorage.getItem('item name');\n// localStorage.setItem('item name)\n// const initialExpenses = [\n//   { id: uuid(), charge: \"rent\", amount: 1600 },\n//   { id: uuid(), charge: \"car payment\", amount: 400 },\n//   { id: uuid(), charge: \"credit card bill\", amount: 1200 },\n// ];\n\n\nconst initialExpenses = localStorage.getItem(\"expenses\") ? JSON.parse(localStorage.getITem(\"expenses\")) : [];\n\nfunction App() {\n  //state values\n  const [expenses, setExpenses] = useState(initialExpenses); //single expense\n\n  const [charge, setCharge] = useState(\"\"); //single amount\n\n  const [amount, setAmount] = useState(\"\"); //alert\n\n  const [alert, setAlert] = useState({\n    show: false\n  }); //edit\n\n  const [edit, setEdit] = useState(false); //edititem\n\n  const [id, setId] = useState(0); //fuctionality\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleAlert = ({\n    type,\n    text\n  }) => {\n    setAlert({\n      show: true,\n      type,\n      text\n    });\n    setTimeout(() => {\n      setAlert({\n        show: false\n      });\n    }, 3000);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? { ...item,\n            charge,\n            amount\n          } : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n        handleAlert({\n          type: \"success\",\n          text: \"item edited\"\n        });\n      } else {\n        const singleExpense = {\n          id: uuid(),\n          charge,\n          amount\n        };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({\n          type: \"success\",\n          text: \"item added\"\n        });\n      }\n\n      setCharge(\"\");\n      setAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: `charge cannot have an empty value and amount has be bigger than 0.`\n      });\n    }\n  };\n\n  const clearItems = () => {\n    setExpenses([]);\n    handleAlert({\n      type: \"danger\",\n      text: \"all items deleted\"\n    });\n  };\n\n  const handleDelete = id => {\n    let tempExpenses = expenses.filter(item => item.id !== id);\n    setExpenses(tempExpenses);\n    handleAlert({\n      type: \"danger\",\n      text: \"item deleted\"\n    });\n  };\n\n  const handleEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let {\n      charge,\n      amount\n    } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, alert.show && /*#__PURE__*/React.createElement(Alert, {\n    type: alert.type,\n    text: alert.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"budget calculator\"), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpenseForm, {\n    charge: charge,\n    amount: amount,\n    handleAmount: handleAmount,\n    handleCharge: handleCharge,\n    handleSubmit: handleSubmit,\n    edit: edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ExpenseList, {\n    expenses: expenses,\n    handleDelete: handleDelete,\n    handleEdit: handleEdit,\n    clearItems: clearItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"total spending :\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"$\", expenses.reduce((acc, curr) => {\n    return acc += parseInt(curr.amount);\n  }, 0))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/React-Practice/budget-calculator/src/App.js"],"names":["React","useState","ExpenseList","ExpenseForm","Alert","uuid","require","initialExpenses","localStorage","getItem","JSON","parse","getITem","App","expenses","setExpenses","charge","setCharge","amount","setAmount","alert","setAlert","show","edit","setEdit","id","setId","handleCharge","e","target","value","handleAmount","handleAlert","type","text","setTimeout","handleSubmit","preventDefault","tempExpenses","map","item","singleExpense","clearItems","handleDelete","filter","handleEdit","expense","find","reduce","acc","curr","parseInt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport ExpenseList from \"./components/expenseList\";\nimport ExpenseForm from \"./components/expenseForm\";\nimport Alert from \"./components/alert\";\nconst { uuid } = require(\"uuidv4\");\n//localStorage.getItem('item name');\n// localStorage.setItem('item name)\n// const initialExpenses = [\n//   { id: uuid(), charge: \"rent\", amount: 1600 },\n//   { id: uuid(), charge: \"car payment\", amount: 400 },\n//   { id: uuid(), charge: \"credit card bill\", amount: 1200 },\n// ];\n\nconst initialExpenses = localStorage.getItem(\"expenses\")\n  ? JSON.parse(localStorage.getITem(\"expenses\"))\n  : [];\nfunction App() {\n  //state values\n\n  const [expenses, setExpenses] = useState(initialExpenses);\n  //single expense\n  const [charge, setCharge] = useState(\"\");\n  //single amount\n  const [amount, setAmount] = useState(\"\");\n  //alert\n  const [alert, setAlert] = useState({ show: false });\n  //edit\n  const [edit, setEdit] = useState(false);\n  //edititem\n  const [id, setId] = useState(0);\n\n  //fuctionality\n  const handleCharge = (e) => {\n    setCharge(e.target.value);\n  };\n  const handleAmount = (e) => {\n    setAmount(e.target.value);\n  };\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false });\n    }, 3000);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map((item) => {\n          return item.id === id ? { ...item, charge, amount } : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n        handleAlert({ type: \"success\", text: \"item edited\" });\n      } else {\n        const singleExpense = { id: uuid(), charge, amount };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n\n      setCharge(\"\");\n      setAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: `charge cannot have an empty value and amount has be bigger than 0.`,\n      });\n    }\n  };\n\n  const clearItems = () => {\n    setExpenses([]);\n    handleAlert({ type: \"danger\", text: \"all items deleted\" });\n  };\n  const handleDelete = (id) => {\n    let tempExpenses = expenses.filter((item) => item.id !== id);\n    setExpenses(tempExpenses);\n    handleAlert({ type: \"danger\", text: \"item deleted\" });\n  };\n\n  const handleEdit = (id) => {\n    let expense = expenses.find((item) => item.id === id);\n    let { charge, amount } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <Alert />\n      <h1>budget calculator</h1>\n      <main className=\"App\">\n        <ExpenseForm\n          charge={charge}\n          amount={amount}\n          handleAmount={handleAmount}\n          handleCharge={handleCharge}\n          handleSubmit={handleSubmit}\n          edit={edit}\n        />\n        <ExpenseList\n          expenses={expenses}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          clearItems={clearItems}\n        />\n      </main>\n      <h1>\n        total spending :{\" \"}\n        <span className=\"total\">\n          $\n          {expenses.reduce((acc, curr) => {\n            return (acc += parseInt(curr.amount));\n          }, 0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}